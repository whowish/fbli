# encoding: utf-8
require File.expand_path("../abstract", __FILE__)

MOBY_PICTURE_DEVELOPER_KEY = "GpXvD0QNxTzaa5lP"

module ThaiFlood
  
  class GamlingTwitter < Abstract
    
    NUM_TWEETS = 100
    
    class << self
      
      def initialize_resource
        
        @data = { :q => "#gamlingorg",
                 :result_type => "recent",
                 :with_twitter_user_id => "false",
                 :include_entities => "true",
                 :rpp => NUM_TWEETS
                }
                
        @query = []
        @data.each_pair { |key,value|
          @query.push("#{key}=#{CGI.escape(value.to_s)}")
        }
        
        @base_url = "http://search.twitter.com/search.json"
        @url = "#{@base_url}?#{@query.join("&")}"
        
      end
      

      def query
        json = ThaiFlood.get_json(@url)
      
        if json['refresh_url']
          @url = "#{@base_url}#{json['refresh_url']}" 
        else
          @url = "#{@base_url}?#{@query.join("&")}"
        end
        
        return json['results']
      end
      
      
      def process(tweet)

        return if !ThaiFlood.key_exists(tweet, "geo")
         
        water_height = (ThaiFlood.get_water_height(tweet['text']) || Post::WATER_LEVELS[0])
         
        image_url = nil
        if ThaiFlood.key_exists(tweet, "entities", "urls")
          url = tweet['entities']['urls'][0]

          if ThaiFlood.key_exists(url, "expanded_url")
            
            if url['expanded_url'] != nil
              image_url = TwitterImageUrlResolver.resolve(url['expanded_url'])
              
              if image_url != nil
                tweet['text'] = tweet['text'].sub(url['url'], "")
              end
            end
          end
        end

        checked = CheckedTwitter.first(:conditions=>{:tweet_id => tweet['id_str']})
        
        Rails.logger.info { "#{tweet['from_user']}" }
        if !checked
          
          Rails.logger.info { "Add it" }
          
          member = TwitterMember.first(:conditions=>{:twitter_id=>tweet['from_user']})
          
          if !member
            member = TwitterMember.create(:twitter_id => tweet['from_user'],
                                          :name => "@#{tweet['from_user']}")
          end
          
          post = Post.create(:location => [tweet["geo"]["coordinates"][0],tweet["geo"]["coordinates"][1]],
                              :image => "",
                              :message => tweet['text'],
                              :place => "",
                              :water_height=> water_height,
                              :tweet_id => tweet['id_str'],
                              :tweet_image_url => image_url,
                              :member_id => member.id,
                              :name => member.name,
                              :time=>Time.parse(tweet['created_at'])
                            )
                            
          CheckedTwitter.create(:tweet_id => tweet['id_str'])
          
        else
          #puts "Already exists"
        end
        
      end

    end
  
  end
  
end